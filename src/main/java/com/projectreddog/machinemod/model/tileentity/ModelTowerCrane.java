// Date: 12/24/2014 5:11:17 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package com.projectreddog.machinemod.model.tileentity;

import java.io.IOException;
import java.util.HashMap;

import org.lwjgl.opengl.GL11;

import com.projectreddog.machinemod.reference.Reference;
import com.projectreddog.machinemod.tileentities.TileEntityTowerCrane;
import com.projectreddog.machinemod.utility.MachineModModelHelper;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.block.model.IBakedModel;
import net.minecraft.entity.Entity;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.client.model.obj.OBJLoader;
import net.minecraftforge.client.model.obj.OBJModel;

public class ModelTowerCrane extends ModelBase {
	// fields

	public OBJModel objModel;
	private HashMap<String, IBakedModel> modelParts;
	double y;
	public static float TOWER_HEIGHT = 57f;
	public static float TOWER_CLAW_OFFSET = 3.75f;

	public ModelTowerCrane() {
		double y = 0;

		try {
			objModel = (OBJModel) OBJLoader.INSTANCE.loadModel(new ResourceLocation(Reference.MOD_ID.toLowerCase(), "models/towercrane.obj"));
			modelParts = MachineModModelHelper.getModelsForGroups(objModel);
		} catch (IOException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	public void renderGroupObject(String groupName) {
		MachineModModelHelper.renderBakedModel(modelParts.get(groupName));

	}

	public void render(TileEntity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		// super.render(null, f, f1, f2, f3, f4, f5);
		int x = 3;
		y++;
		if (y > 57) {
			y = 0;
		}
		int z = 3;

		renderGroupObject("Legs_Cylinder.001");

		// public double armRotation;
		// public double gantryPos;
		// public double wenchPos;
		double rotamt = 0;
		double gantyPos = 0;
		double wenchPos = 0;
		if (entity instanceof TileEntityTowerCrane) {
			TileEntityTowerCrane tetc = (TileEntityTowerCrane) entity;
			rotamt = tetc.armRotation;
			gantyPos = tetc.gantryPos;
			wenchPos = tetc.wenchPos;
		}
		GL11.glRotated(90d - rotamt, 0, 1, 0);
		renderGroupObject("Top_Cylinder.002");
		double delta = Math.sqrt(x * x + z * z);

		GL11.glTranslated(0, 0, -gantyPos);
		renderGroupObject("Rigging_Cube.002");
		//
		GL11.glPushMatrix();
		GL11.glTranslated(0, -((wenchPos + 2.)), 0);
		GL11.glScaled(1, ((+(TOWER_HEIGHT - TOWER_CLAW_OFFSET) - wenchPos) / 2), 1);
		renderGroupObject("Cable_Cylinder.011");
		GL11.glPopMatrix();

		//

		GL11.glRotated(rotamt, 0, 1, 0);
		GL11.glTranslated(0, +(TOWER_HEIGHT - TOWER_CLAW_OFFSET) - wenchPos, 0);
		renderGroupObject("Claw_Cube.003");

		GL11.glTranslated(0, -(TOWER_HEIGHT - TOWER_CLAW_OFFSET) + wenchPos, 0);
		GL11.glTranslated(0, -TOWER_HEIGHT, 0);

		GL11.glTranslated(0, TOWER_HEIGHT - wenchPos, 0);

		GL11.glTranslated(+.5d, 0, -.5d);

	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
	}

	public ResourceLocation getTexture() {

		return new ResourceLocation("machinemod", Reference.MODEL_TRACTOR_TEXTURE_LOCATION);
	}

}
